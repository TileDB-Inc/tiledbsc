% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AssayMatrix.R
\name{AssayMatrix}
\alias{AssayMatrix}
\title{Single-cell Assay Matrix}
\description{
Base class for 2D sparse \code{matrix}-like data with string dimensions. An
\code{AssayMatrix} may contain one or more "layers" (i.e., additional measurements
that share the same dimensions and non-empty coordinates.

Used for the \code{X} field of \code{\link{SOMA}}.
}
\section{Super classes}{
\code{\link[tiledbsc:TileDBObject]{tiledbsc::TileDBObject}} -> \code{\link[tiledbsc:TileDBArray]{tiledbsc::TileDBArray}} -> \code{\link[tiledbsc:AnnotationArray]{tiledbsc::AnnotationArray}} -> \code{AssayMatrix}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{verbose}}{Print status messages}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AssayMatrix-from_matrix}{\code{AssayMatrix$from_matrix()}}
\item \href{#method-AssayMatrix-from_dataframe}{\code{AssayMatrix$from_dataframe()}}
\item \href{#method-AssayMatrix-to_dataframe}{\code{AssayMatrix$to_dataframe()}}
\item \href{#method-AssayMatrix-to_matrix}{\code{AssayMatrix$to_matrix()}}
\item \href{#method-AssayMatrix-clone}{\code{AssayMatrix$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBObject" data-id="class"><a href='../../tiledbsc/html/TileDBObject.html#method-TileDBObject-class'><code>tiledbsc::TileDBObject$class()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBObject" data-id="exists"><a href='../../tiledbsc/html/TileDBObject.html#method-TileDBObject-exists'><code>tiledbsc::TileDBObject$exists()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="add_metadata"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-add_metadata'><code>tiledbsc::TileDBArray$add_metadata()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="array_exists"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-array_exists'><code>tiledbsc::TileDBArray$array_exists()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="attributes"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-attributes'><code>tiledbsc::TileDBArray$attributes()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="attrnames"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-attrnames'><code>tiledbsc::TileDBArray$attrnames()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="dimensions"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-dimensions'><code>tiledbsc::TileDBArray$dimensions()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="dimnames"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-dimnames'><code>tiledbsc::TileDBArray$dimnames()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="fragment_count"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-fragment_count'><code>tiledbsc::TileDBArray$fragment_count()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="get_metadata"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-get_metadata'><code>tiledbsc::TileDBArray$get_metadata()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="initialize"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-initialize'><code>tiledbsc::TileDBArray$initialize()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="print"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-print'><code>tiledbsc::TileDBArray$print()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="reset_query"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-reset_query'><code>tiledbsc::TileDBArray$reset_query()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="schema"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-schema'><code>tiledbsc::TileDBArray$schema()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="set_query"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-set_query'><code>tiledbsc::TileDBArray$set_query()</code></a></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBArray" data-id="tiledb_array"><a href='../../tiledbsc/html/TileDBArray.html#method-TileDBArray-tiledb_array'><code>tiledbsc::TileDBArray$tiledb_array()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AssayMatrix-from_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-AssayMatrix-from_matrix}{}}}
\subsection{Method \code{from_matrix()}}{
Ingest assay data from a sparse matrix
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AssayMatrix$from_matrix(x, index_cols, value_col = "value")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{any \code{matrix}-like object coercible to a
\code{\link[Matrix:TsparseMatrix-class]{TsparseMatrix}} with string dimensions.}

\item{\code{index_cols}}{Names to use for the TileDB array's dimensions that
will contain the matrix row/column names.}

\item{\code{value_col}}{Name to use for the TileDB array's attribute that will
contain the matrix values.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AssayMatrix-from_dataframe"></a>}}
\if{latex}{\out{\hypertarget{method-AssayMatrix-from_dataframe}{}}}
\subsection{Method \code{from_dataframe()}}{
Ingest assay data from a COO-formatted data frame
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AssayMatrix$from_dataframe(x, index_cols)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{a \code{\link{data.frame}}}

\item{\code{index_cols}}{A column index, either numeric with a column index, or
character with a column name, identifying the 2 index columns. All
other columns are ingested as attributes.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AssayMatrix-to_dataframe"></a>}}
\if{latex}{\out{\hypertarget{method-AssayMatrix-to_dataframe}{}}}
\subsection{Method \code{to_dataframe()}}{
Retrieve the assay data from TileDB
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AssayMatrix$to_dataframe(attrs = NULL, batch_mode = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{attrs}}{Specify one or more attributes to retrieve. If \code{NULL},
all attributes are retrieved.}

\item{\code{batch_mode}}{logical, if \code{TRUE}, batch query mode is enabled, which
provides the ability to detect partial query results and resubmit until
all results are retrieved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{\link[Matrix:dgTMatrix-class]{Matrix::dgTMatrix}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AssayMatrix-to_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-AssayMatrix-to_matrix}{}}}
\subsection{Method \code{to_matrix()}}{
Retrieve assay data from TileDB as a 2D sparse matrix.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AssayMatrix$to_matrix(attr = NULL, batch_mode = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{attr}}{The name of the attribute layer to retrieve. If \code{NULL}, the
first layer is returned.}

\item{\code{batch_mode}}{logical, if \code{TRUE}, batch query mode is enabled, which
provides the ability to detect partial query results and resubmit until
all results are retrieved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{\link[Matrix:dgTMatrix-class]{Matrix::dgTMatrix}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AssayMatrix-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AssayMatrix-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AssayMatrix$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
